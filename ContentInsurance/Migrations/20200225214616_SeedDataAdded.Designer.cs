// <auto-generated />
using ContentInsurance.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContentInsurance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200225214616_SeedDataAdded")]
    partial class SeedDataAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContentInsurance.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Kitchen"
                        });
                });

            modelBuilder.Entity("ContentInsurance.Models.Content", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ContentId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Contents");

                    b.HasData(
                        new
                        {
                            ContentId = 1,
                            CategoryId = 1,
                            Name = "TV",
                            Value = 2000
                        },
                        new
                        {
                            ContentId = 2,
                            CategoryId = 1,
                            Name = "Playstation",
                            Value = 400
                        },
                        new
                        {
                            ContentId = 3,
                            CategoryId = 1,
                            Name = "Stereo",
                            Value = 1600
                        },
                        new
                        {
                            ContentId = 4,
                            CategoryId = 2,
                            Name = "Shirts",
                            Value = 1100
                        },
                        new
                        {
                            ContentId = 5,
                            CategoryId = 2,
                            Name = "Jeans",
                            Value = 1100
                        },
                        new
                        {
                            ContentId = 6,
                            CategoryId = 3,
                            Name = "Pots and Pans",
                            Value = 3000
                        },
                        new
                        {
                            ContentId = 7,
                            CategoryId = 3,
                            Name = "Flatware",
                            Value = 500
                        },
                        new
                        {
                            ContentId = 8,
                            CategoryId = 3,
                            Name = "Knife Set",
                            Value = 500
                        },
                        new
                        {
                            ContentId = 9,
                            CategoryId = 3,
                            Name = "Misc",
                            Value = 1000
                        });
                });

            modelBuilder.Entity("ContentInsurance.Models.Content", b =>
                {
                    b.HasOne("ContentInsurance.Models.Category", "Category")
                        .WithMany("Contents")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
